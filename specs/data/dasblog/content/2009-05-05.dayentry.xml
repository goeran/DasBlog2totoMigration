<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2009-05-05T02:00:00+02:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;Every now and then I get the question about what books I recommend on the topic of programming and software development. As I try to practice the DRY (&lt;a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank"&gt;Don‘t repeat yourself&lt;/a&gt;) principle while writing code, I‘ll also intend to do it in real life. And by answering this question in form of a blog post, I‘ll be able to redirect future questioners here. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://blog.goeran.no/content/binary/WindowsLiveWriter/Asoftwarecraftsmansbookshelf_11F87/IMG_5895.jpg"&gt;&lt;img title="IMG_5895" style="border-top-width: 0px; display: block; border-left-width: 0px; float: none; border-bottom-width: 0px; margin-left: auto; margin-right: auto; border-right-width: 0px" height="410" alt="IMG_5895" src="http://blog.goeran.no/content/binary/WindowsLiveWriter/Asoftwarecraftsmansbookshelf_11F87/IMG_5895_thumb.jpg" width="504" border="0" /&gt;&lt;/a&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;I’ve assembled a list of books that I’ve read or that’s in my books-to-read queue.&lt;/p&gt;  &lt;h3&gt;The list&lt;/h3&gt;  &lt;p&gt;The list is sorted by my favorite books.&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/ref=pd_bbs_sr_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548177&amp;amp;sr=8-1" target="_blank"&gt;Clean Code&lt;/a&gt;       &lt;br /&gt;&lt;/b&gt;&lt;i&gt;Robert C. Martin, also known as Uncle Bob      &lt;br /&gt;&lt;/i&gt;I finished reading this book a week ago and I have only one thing to say, it’s a masterpiece. If you are a professional programmer, you should read this book. I learned many, many neat tricks reading this book. Uncle Bob have 40 years of experience as a programmer, and he worked very hard not to become a business wonk, and this made him sharp like a knife. Read this book, it will give you a clear perspective on how to write quality code. Expect to read lots of code samples, and work hard to grasp the content. I’m going to convince every programmer I work with to read this book!&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548199&amp;amp;sr=1-1" target="_blank"&gt;The Pragmatic Programmer&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;i&gt;Andy Hunt and Dave Thomas&lt;/i&gt;     &lt;br /&gt;Hunt and Thomas are great storytellers and you’ll be blown away with their wisdom – it seems like they have been programmers forever! I like this book because it‘s hands-on and lots of the advice you get by reading it, you can put into practice in your daily job. The book tells you everything you need to know in order to become a good programmer.     &lt;br /&gt;    &lt;br /&gt;They also push hard that programming is not only science, but a craft, and you need to practice it a lot in order to become a master - hence the slogan “From journeyman to master”. The book will provide you with tons of practical tips and the first one is “Care about your craft”. If I ever get responsible for a team of developers - hey, who the heck would put me in charge? :p, I’ll give this book to every one of them and then send them home and ask them not to come back before they have completed the book! &lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional/dp/0201633612/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548227&amp;amp;sr=1-1" target="_blank"&gt;Design Patterns: Elements of Reusable Obect-Oriented Software&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;i&gt;Eric Gamma, Richard Helm. Raplh Johnson, John M. Vlissides AKA. The Gang of Four&lt;/i&gt;     &lt;br /&gt;The first book ever to write about design patterns, it was released back in 1994 and it documented 23 patterns. I have to admit that I had to read this book several times to grasp most of the ideas, but it was worthwhile. &lt;/p&gt;  &lt;p&gt;This book is not for beginners, but for developers with experience from OO (Object Oriented) languages and design. You probably find people argue that this book is not applicable today because the patterns were discovered in the time of C++, which don‘t contain modern language features like Generics and Events like we have in C# today. I disagree with these people because the core underlying principles are just plain old Object Orientation, but I can understand the argument. The samples in this book might not be as relevant for C# as they are for C++, and if you apply some of these patterns in a modern language, you obviously need to think about the features you have available in the language, and use them. There is a reason that we have the event language feature in C# today – so it’s easier to implement the observer pattern! If you learn and understand the observer, you‘ll also learn that loosely coupled code is harder to read and debug. The book is a good reference and contains the most general patterns you need to know about, but remember that even though you use a language with built-in language feature for some of these patterns, you should know about the pros and cons in order to make good design decisions! This is a good educational book.&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548296&amp;amp;sr=1-1" target="_blank"&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;i&gt;Eric Evans      &lt;br /&gt;&lt;/i&gt;I think this one is about to become one of the most important books out there on the topic of OO design and modeling. It‘s been a while since Evans published this book, but it seems to get more and more attention nowadays, and more and more people I talk to practice DDD (Domain Driven Design). I think the most important thing Evans teaches us is what he calls the ubiquitous language. The books also teach good modeling practices, and documents lots of useful patterns. This book made me revisit Object Orientation. You should read it, if you are experienced with OO design and programming.&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548399&amp;amp;sr=1-1" target="_blank"&gt;Head First: Design Patterns&lt;/a&gt;&lt;/b&gt;&lt;b&gt;      &lt;br /&gt;&lt;/b&gt;&lt;i&gt;Elisabeth Freeman, Eric Freeman, Bert Bates, Kathy Sierra      &lt;br /&gt;&lt;/i&gt;This is the design patterns ABC-book. The authors have a great talent in communicating complex ideas in a way that‘s easy for the readers to understand. The book contains some of the same patterns as the GoF-book and the code samples are mostly in Java as well. Highly recommended for beginners on the topic of design patterns!     &lt;br /&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Windows-Presentation-Foundation-Unleashed-WPF/dp/0672328917/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548422&amp;amp;sr=1-1" target="_blank"&gt;Windows Presentation Foundation Unleashed&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Adam Nathan&lt;/em&gt;     &lt;br /&gt;The only book I‘ve read about Windows Presentation Foundation, and It gives a solid introduction to the technology. I admit that I haven’t read the book from chapter to chapter, but use it frequently as a reference when I need to learn new neat features about WPF. The code samples in the book even have color highlighting! This book should be in every WPF/Silverlight developer’s bookshelf.&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Best-Software-Writing-Selected-Introduced/dp/1590595009/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548570&amp;amp;sr=1-1" target="_blank"&gt;The best Software Writing&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Joel Spolsky&lt;/em&gt;     &lt;br /&gt;Mr. Spolsky has assembled a very entertaining book of essays on the topic of software engineering. The essays I remember are Paul Graham’s “Great Hackers” and Eric Lippert’s “How many Microsoft Employees Does It Take to Change a Lightbulb?”. &lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548603&amp;amp;sr=1-1" target="_blank"&gt;Agile Software Development, Principles, Patterns, and Practices&lt;/a&gt;       &lt;br /&gt;&lt;/b&gt;&lt;em&gt;Robert C. Martin&lt;/em&gt;     &lt;br /&gt;I’m hooked on Uncle Bob, he is the Master Chief of programmers, and an awesome writer. This is a book I’ll read very soon.&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Enterprise-Application-Architecture-Addison-Wesley-Signature/dp/0321127420/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548660&amp;amp;sr=1-1" target="_blank"&gt;Patterns of Enterprise Application Architecture&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Martin Fowler&lt;/em&gt;     &lt;br /&gt;This book is yet another book that’s on my books-to-read queue. Fowler is a notorious craftsman in the art of software engineering, and I’m looking forward to take a snapshot of his brain!&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Enterprise-Application-Architecture-Addison-Wesley-Signature/dp/0321127420/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548660&amp;amp;sr=1-1" target="_blank"&gt;Code Complete: A Practical Handbook of Software Construction&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Steve McConnel&lt;/em&gt;     &lt;br /&gt;Have not had the chance to read this book yet, but I will sometimes soon. The word on the street says that this book is even better than Pragmatic Programmer – now we have to see about that!&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://www.amazon.com/Applying-Domain-Driven-Design-Patterns-Examples/dp/0321268202/ref=sr_1_2?ie=UTF8&amp;amp;s=books&amp;amp;qid=1241548740&amp;amp;sr=1-2" target="_blank"&gt;Applying Domain-Driven Design and Patterns: With Examples in C# and .NET&lt;/a&gt;&lt;/b&gt;     &lt;br /&gt;&lt;em&gt;Jimmy Nilsson&lt;/em&gt;     &lt;br /&gt;I haven’t had the opportunity to read this book yet, but people that have read it says it’s a more hands-on and practical book than Events book. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;This is my list, for now, but I’m continuously seeking more knowledge in order to become a master in the craftsmanship of software development. While assembling the list I just realized that I don’t have a book about Test Driven Development – I should do something about that.&lt;/p&gt;  &lt;p&gt;It would be interesting to hear what you and other fellow developers are reading, and what you have in your bookshelf – so therefore I‘ll start yet another meme and I invite you and the following people to answer:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://jonas.follesoe.no" target="_blank"&gt;Jonas Follesø&lt;/a&gt; – Silverlight guru, vivid speaker, long time partner in crime and friend! &lt;/li&gt;    &lt;li&gt;&lt;a href="http://tore.vestues.no/recommended-books/" target="_blank"&gt;Tore Vestues&lt;/a&gt; – wise guy and friend. I think of him as one of the most skilled craftsmen I personally know (It seems like Tore already had a book list, I’ve updated the link) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://andersnoras.com/" target="_blank"&gt;Anders Norås&lt;/a&gt; – Admirable and skilled software craftsman &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.ingebrigtsen.info/" target="_blank"&gt;Einar Ingebrigtsen&lt;/a&gt; – The Norwegian Scott Hanselman! &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blog.fohjin.com/" target="_blank"&gt;Mark Nijhof&lt;/a&gt; – Seriously skilled software craftsman and a community hero &lt;/li&gt;    &lt;li&gt;&lt;a href="http://ox.no/" target="_blank"&gt;Håvard Stranden&lt;/a&gt; – Fellow member of NNUG in Trondheim, active blogger and speaker &lt;/li&gt;    &lt;li&gt;&lt;a href="http://borge3000.no/" target="_blank"&gt;Børge Hansen&lt;/a&gt; – Active blogger and architect working for Microsoft Norway &lt;/li&gt;    &lt;li&gt;&lt;a href="http://sondreb.com/blog/" target="_blank"&gt;Sondre Bjellås&lt;/a&gt; – Friend, thinker, mr. Robotics and the Norwegian Geek of the Year 2008 &lt;/li&gt;    &lt;li&gt;&lt;a href="http://iridescence.no/" target="_blank"&gt;Fredik Kalseth&lt;/a&gt; – Highly active blogger about .NET, design patterns, testing etc. and a skilled software craftsman &lt;/li&gt;    &lt;li&gt;&lt;a href="http://larswilhelmsen.com/2009/05/12/the-book-shelf-of-a-connected-systems-mvp/" target="_blank"&gt;Lars Wilhelmsen&lt;/a&gt; – Highly active in the Microsoft community and the new master chief of the Norwegian .NET User Group. Lars has now responded to this post. Click the link to watch his bookshelf&amp;#160; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.joaroyen.com/" target="_blank"&gt;Joar Øyen&lt;/a&gt; – Friend, MVP and master chief of NNUG Trondheim &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blog.fossmo.net/" target="_blank"&gt;Pål Fossmo&lt;/a&gt; – Friend, MVP, good speaker and a skilled software craftsman. Pål has &lt;a href="http://blog.fossmo.net/post/A-Software-Craftsmane28099s-bookshelf.aspx" target="_blank"&gt;responded to this post&lt;/a&gt;&amp;#160;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.kjetilk.com/" target="_blank"&gt;Kjetil Klaussen&lt;/a&gt; – Friend, good speaker and a skilled software craftsman &lt;/li&gt;    &lt;li&gt;&lt;a href="http://brodwall.com/johannes/blog/" target="_blank"&gt;Johannes Brodwall&lt;/a&gt; – Norwegian agile guru! &lt;/li&gt; &lt;/ul&gt;</Content>
      <Created>2009-05-05T20:58:33.0674448+02:00</Created>
      <Modified>2009-06-05T14:24:15.106584+02:00</Modified>
      <EntryId>b0df5924-fb90-4506-b2e7-1e15a5e981c6</EntryId>
      <Description />
      <Title>A Software Craftsman&amp;rsquo;s Bookshelf</Title>
      <Categories>books;craftsmanship;programming</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
    </Entry>
  </Entries>
</DayEntry>